<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Annonce extends \App\Entity\Annonce implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'posted', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'User', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'candidatures', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'salaire', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'contrat', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'adresseTravail', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'experience', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'heuresTravail', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'signals', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'diplome', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'domaine'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'posted', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'User', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'candidatures', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'salaire', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'contrat', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'adresseTravail', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'experience', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'heuresTravail', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'signals', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'diplome', '' . "\0" . 'App\\Entity\\Annonce' . "\0" . 'domaine'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Annonce $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosted(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosted', []);

        return parent::getPosted();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosted(?\DateTimeInterface $posted): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosted', [$posted]);

        return parent::setPosted($posted);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $User): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$User]);

        return parent::setUser($User);
    }

    /**
     * {@inheritDoc}
     */
    public function getCandidatures(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCandidatures', []);

        return parent::getCandidatures();
    }

    /**
     * {@inheritDoc}
     */
    public function addCandidature(\App\Entity\Candidature $candidature): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCandidature', [$candidature]);

        return parent::addCandidature($candidature);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCandidature(\App\Entity\Candidature $candidature): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCandidature', [$candidature]);

        return parent::removeCandidature($candidature);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalaire(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalaire', []);

        return parent::getSalaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalaire(?string $salaire): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalaire', [$salaire]);

        return parent::setSalaire($salaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getContrat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContrat', []);

        return parent::getContrat();
    }

    /**
     * {@inheritDoc}
     */
    public function setContrat(?string $contrat): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContrat', [$contrat]);

        return parent::setContrat($contrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresseTravail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresseTravail', []);

        return parent::getAdresseTravail();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresseTravail(?string $adresseTravail): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresseTravail', [$adresseTravail]);

        return parent::setAdresseTravail($adresseTravail);
    }

    /**
     * {@inheritDoc}
     */
    public function getExperience(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperience', []);

        return parent::getExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperience(?string $experience): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperience', [$experience]);

        return parent::setExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeuresTravail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeuresTravail', []);

        return parent::getHeuresTravail();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeuresTravail(?string $heuresTravail): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeuresTravail', [$heuresTravail]);

        return parent::setHeuresTravail($heuresTravail);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignals(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignals', []);

        return parent::getSignals();
    }

    /**
     * {@inheritDoc}
     */
    public function addSignal(\App\Entity\Signal $signal): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSignal', [$signal]);

        return parent::addSignal($signal);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSignal(\App\Entity\Signal $signal): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSignal', [$signal]);

        return parent::removeSignal($signal);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiplome(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiplome', []);

        return parent::getDiplome();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiplome(?string $diplome): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiplome', [$diplome]);

        return parent::setDiplome($diplome);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomaine(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomaine', []);

        return parent::getDomaine();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomaine(?string $domaine): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomaine', [$domaine]);

        return parent::setDomaine($domaine);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\App\Entity\User $user): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', [$user]);

        return parent::addUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\App\Entity\User $user): \App\Entity\Annonce
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', [$user]);

        return parent::removeUser($user);
    }

}
